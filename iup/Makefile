#############################################################################
# Makefile for building: libiup.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.3.0) on: Tue Jul 3 10:50:53 2007
# Project:  iup.pro
# Template: lib
# Command: /opt/qt4/bin/qmake -unix -o Makefile iup.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=i686 -mtune=generic -O2 -pipe -D_REENTRANT -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -pipe -march=i686 -mtune=generic -O2 -pipe -D_REENTRANT -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/opt/qt4/mkspecs/linux-g++ -I. -I/opt/qt4/include/QtCore -I/opt/qt4/include/QtCore -I/opt/qt4/include/QtGui -I/opt/qt4/include/QtGui -I/opt/qt4/include -I../include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-rpath,/opt/qt4/lib -shared -Wl,-soname,libiup.so.1
LIBS          = $(SUBLIBS)  -L/opt/qt4/lib -lQtGui -L/opt/qt4/lib -L/usr/X11R6/lib -laudio -lXt -lpng -lSM -lICE -pthread -pthread -lXi -lXrender -lXrandr -lXfixes -lXcursor -lXinerama -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -pthread -lgthread-2.0 -lrt -lglib-2.0 -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /opt/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = icalcsize.c \
		icpi.c \
		idlglist.c \
		ifocus.c \
		iglobalenv.c \
		ilex.c \
		inames.c \
		ipredial.c \
		istrutil.c \
		itraverse.c \
		iup.c \
		icall.c \
		icreate.c \
		ienv.c \
		ifunc.c \
		ikey.c \
		imask.c \
		iparse.c \
		iscanf.c \
		itable.c \
		itree.c \
		qt/qt.cpp \
		qt/objects.cpp moc_objects.cpp
OBJECTS       = icalcsize.o \
		icpi.o \
		idlglist.o \
		ifocus.o \
		iglobalenv.o \
		ilex.o \
		inames.o \
		ipredial.o \
		istrutil.o \
		itraverse.o \
		iup.o \
		icall.o \
		icreate.o \
		ienv.o \
		ifunc.o \
		ikey.o \
		imask.o \
		iparse.o \
		iscanf.o \
		itable.o \
		itree.o \
		qt.o \
		objects.o \
		moc_objects.o
DIST          = /opt/qt4/mkspecs/common/g++.conf \
		/opt/qt4/mkspecs/common/unix.conf \
		/opt/qt4/mkspecs/common/linux.conf \
		/opt/qt4/mkspecs/qconfig.pri \
		/opt/qt4/mkspecs/features/qt_functions.prf \
		/opt/qt4/mkspecs/features/qt_config.prf \
		/opt/qt4/mkspecs/features/exclusive_builds.prf \
		/opt/qt4/mkspecs/features/default_pre.prf \
		/opt/qt4/mkspecs/features/release.prf \
		/opt/qt4/mkspecs/features/default_post.prf \
		/opt/qt4/mkspecs/features/qt.prf \
		/opt/qt4/mkspecs/features/unix/thread.prf \
		/opt/qt4/mkspecs/features/moc.prf \
		/opt/qt4/mkspecs/features/warn_on.prf \
		/opt/qt4/mkspecs/features/resources.prf \
		/opt/qt4/mkspecs/features/uic.prf \
		/opt/qt4/mkspecs/features/yacc.prf \
		/opt/qt4/mkspecs/features/lex.prf \
		iup.pro
QMAKE_TARGET  = iup
DESTDIR       = ../lib/
TARGET        = libiup.so.1.0.0
TARGETA       = ../lib/libiup.a
TARGETD       = libiup.so.1.0.0
TARGET0       = libiup.so
TARGET1       = libiup.so.1
TARGET2       = libiup.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../lib/$(TARGET)

../lib/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../lib/ || $(MKDIR) ../lib/ 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../lib/$(TARGET)
	-$(DEL_FILE) ../lib/$(TARGET0)
	-$(DEL_FILE) ../lib/$(TARGET1)
	-$(DEL_FILE) ../lib/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../lib/



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: iup.pro  /opt/qt4/mkspecs/linux-g++/qmake.conf /opt/qt4/mkspecs/common/g++.conf \
		/opt/qt4/mkspecs/common/unix.conf \
		/opt/qt4/mkspecs/common/linux.conf \
		/opt/qt4/mkspecs/qconfig.pri \
		/opt/qt4/mkspecs/features/qt_functions.prf \
		/opt/qt4/mkspecs/features/qt_config.prf \
		/opt/qt4/mkspecs/features/exclusive_builds.prf \
		/opt/qt4/mkspecs/features/default_pre.prf \
		/opt/qt4/mkspecs/features/release.prf \
		/opt/qt4/mkspecs/features/default_post.prf \
		/opt/qt4/mkspecs/features/qt.prf \
		/opt/qt4/mkspecs/features/unix/thread.prf \
		/opt/qt4/mkspecs/features/moc.prf \
		/opt/qt4/mkspecs/features/warn_on.prf \
		/opt/qt4/mkspecs/features/resources.prf \
		/opt/qt4/mkspecs/features/uic.prf \
		/opt/qt4/mkspecs/features/yacc.prf \
		/opt/qt4/mkspecs/features/lex.prf \
		/opt/qt4/lib/libQtGui.prl \
		/opt/qt4/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile iup.pro
/opt/qt4/mkspecs/common/g++.conf:
/opt/qt4/mkspecs/common/unix.conf:
/opt/qt4/mkspecs/common/linux.conf:
/opt/qt4/mkspecs/qconfig.pri:
/opt/qt4/mkspecs/features/qt_functions.prf:
/opt/qt4/mkspecs/features/qt_config.prf:
/opt/qt4/mkspecs/features/exclusive_builds.prf:
/opt/qt4/mkspecs/features/default_pre.prf:
/opt/qt4/mkspecs/features/release.prf:
/opt/qt4/mkspecs/features/default_post.prf:
/opt/qt4/mkspecs/features/qt.prf:
/opt/qt4/mkspecs/features/unix/thread.prf:
/opt/qt4/mkspecs/features/moc.prf:
/opt/qt4/mkspecs/features/warn_on.prf:
/opt/qt4/mkspecs/features/resources.prf:
/opt/qt4/mkspecs/features/uic.prf:
/opt/qt4/mkspecs/features/yacc.prf:
/opt/qt4/mkspecs/features/lex.prf:
/opt/qt4/lib/libQtGui.prl:
/opt/qt4/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile iup.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/iup1.0.0 || $(MKDIR) .tmp/iup1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/iup1.0.0/ && $(COPY_FILE) --parents icall.h idrv.h ifunc.h iglobal.h imacros.h inames.h istrutil.h itimer.h idlglist.h ifiledlg.h iglobalenv.h ilex.h imask.h ipredial.h itable.h itree.h qt/objects.h .tmp/iup1.0.0/ && $(COPY_FILE) --parents icalcsize.c icpi.c idlglist.c ifocus.c iglobalenv.c ilex.c inames.c ipredial.c istrutil.c itraverse.c iup.c icall.c icreate.c ienv.c ifunc.c ikey.c imask.c iparse.c iscanf.c itable.c itree.c qt/qt.cpp qt/objects.cpp .tmp/iup1.0.0/ && (cd `dirname .tmp/iup1.0.0` && $(TAR) iup1.0.0.tar iup1.0.0 && $(COMPRESS) iup1.0.0.tar) && $(MOVE) `dirname .tmp/iup1.0.0`/iup1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/iup1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../lib/$(TARGET) 
	-$(DEL_FILE) ../lib/$(TARGET0) ../lib/$(TARGET1) ../lib/$(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_objects.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_objects.cpp
moc_objects.cpp: qt/objects.h
	/opt/qt4/bin/moc $(DEFINES) $(INCPATH) qt/objects.h -o moc_objects.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

icalcsize.o: icalcsize.c iglobal.h \
		istrutil.h \
		itable.h \
		inames.h \
		ilex.h \
		imacros.h \
		idrv.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o icalcsize.o icalcsize.c

icpi.o: icpi.c iglobal.h \
		istrutil.h \
		itable.h \
		inames.h \
		ilex.h \
		imacros.h \
		idrv.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o icpi.o icpi.c

idlglist.o: idlglist.c idlglist.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o idlglist.o idlglist.c

ifocus.o: ifocus.c iglobal.h \
		istrutil.h \
		itable.h \
		inames.h \
		ilex.h \
		imacros.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ifocus.o ifocus.c

iglobalenv.o: iglobalenv.c itable.h \
		iglobalenv.h \
		idrv.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o iglobalenv.o iglobalenv.c

ilex.o: ilex.c iglobal.h \
		istrutil.h \
		itable.h \
		inames.h \
		ilex.h \
		imacros.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ilex.o ilex.c

inames.o: inames.c istrutil.h \
		itable.h \
		inames.h \
		iglobal.h \
		ilex.h \
		imacros.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o inames.o inames.c

ipredial.o: ipredial.c ipredial.h \
		istrutil.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ipredial.o ipredial.c

istrutil.o: istrutil.c istrutil.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o istrutil.o istrutil.c

itraverse.o: itraverse.c iglobal.h \
		istrutil.h \
		itable.h \
		inames.h \
		ilex.h \
		imacros.h \
		idlglist.h \
		idrv.h \
		itree.h \
		ifunc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o itraverse.o itraverse.c

iup.o: iup.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o iup.o iup.c

icall.o: icall.c iglobal.h \
		istrutil.h \
		itable.h \
		inames.h \
		ilex.h \
		imacros.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o icall.o icall.c

icreate.o: icreate.c iglobal.h \
		istrutil.h \
		itable.h \
		inames.h \
		ilex.h \
		imacros.h \
		idlglist.h \
		itree.h \
		ifunc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o icreate.o icreate.c

ienv.o: ienv.c iglobal.h \
		istrutil.h \
		itable.h \
		inames.h \
		ilex.h \
		imacros.h \
		idrv.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ienv.o ienv.c

ifunc.o: ifunc.c istrutil.h \
		itable.h \
		ifunc.h \
		idrv.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ifunc.o ifunc.c

ikey.o: ikey.c iglobal.h \
		istrutil.h \
		itable.h \
		inames.h \
		ilex.h \
		imacros.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ikey.o ikey.c

imask.o: imask.c imask.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o imask.o imask.c

iparse.o: iparse.c iglobal.h \
		istrutil.h \
		itable.h \
		inames.h \
		ilex.h \
		imacros.h \
		itree.h \
		ifunc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o iparse.o iparse.c

iscanf.o: iscanf.c ipredial.h \
		istrutil.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o iscanf.o iscanf.c

itable.o: itable.c itable.h \
		istrutil.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o itable.o itable.c

itree.o: itree.c iglobal.h \
		istrutil.h \
		itable.h \
		inames.h \
		ilex.h \
		imacros.h \
		idlglist.h \
		idrv.h \
		itree.h \
		ifunc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o itree.o itree.c

qt.o: qt/qt.cpp qt/objects.h \
		istrutil.h \
		inames.h \
		ifunc.h \
		ilex.h \
		iglobalenv.h \
		imacros.h \
		iglobal.h \
		itable.h \
		itimer.h \
		idrv.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qt.o qt/qt.cpp

objects.o: qt/objects.cpp qt/objects.h \
		iglobal.h \
		istrutil.h \
		itable.h \
		inames.h \
		ilex.h \
		imacros.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects.o qt/objects.cpp

moc_objects.o: moc_objects.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_objects.o moc_objects.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

