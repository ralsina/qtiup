# Sub-makefile autogenerated by premake

ifndef CONFIG
  CONFIG=Debug
endif

BINDIR = ../bin
LIBDIR = ../lib
OBJDIR = ../obj/iupcontrols

LDFLAGS = -L$(BINDIR) -L$(LIBDIR)

ifeq ($(CONFIG),Debug)
  CPPFLAGS = -MD -D "_MOTIF_" -I . -I ../include -I ../src -I $(CDINC) -I /usr/X11R6/include
  CFLAGS += $(CPPFLAGS)
  CXXFLAGS = $(CFLAGS)
  LDFLAGS +=
  TARGET = ./libiupcontrols.a
endif
ifeq ($(CONFIG),Release)
  CPPFLAGS = -MD -D "_MOTIF_" -I . -I ../include -I ../src -I $(CDINC) -I /usr/X11R6/include
  CFLAGS += $(CPPFLAGS) -O2
  CXXFLAGS = $(CFLAGS)
  LDFLAGS +=
  TARGET = ./libiupcontrols.a
endif

$(OBJDIR)/%.o : %.cc
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

$(OBJDIR)/%.o : %.cpp
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

$(OBJDIR)/%.o : %.cxx
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

$(OBJDIR)/%.o : %.c
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CC) $(CFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

$(OBJDIR)/%.o : %.s
	-@if [ ! -d $(OBJDIR) ]; then mkdir -p $(OBJDIR); fi
	@echo $(notdir $<)
	@$(CC) -x assembler-with-cpp $(CPPFLAGS) -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d $(OBJDIR)/$*.d; fi
	@cp $(OBJDIR)/$*.d $(OBJDIR)/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(OBJDIR)/$*.P; \
	rm -f $(OBJDIR)/$*.d

OBJECTS = \
	$(OBJDIR)/cdiuputil.o \
	$(OBJDIR)/iupcbox.o \
	$(OBJDIR)/iupcells.o \
	$(OBJDIR)/iupcolorbar.o \
	$(OBJDIR)/iupcontrols.o \
	$(OBJDIR)/iupdial.o \
	$(OBJDIR)/iupgauge.o \
	$(OBJDIR)/iupgetparam.o \
	$(OBJDIR)/iupimglib.o \
	$(OBJDIR)/iupsbox.o \
	$(OBJDIR)/iupspin.o \
	$(OBJDIR)/iuptabs.o \
	$(OBJDIR)/iupval.o \
	$(OBJDIR)/imask_match.o \
	$(OBJDIR)/imask_parse.o \
	$(OBJDIR)/iupmask.o \
	$(OBJDIR)/imaux.o \
	$(OBJDIR)/imcolres.o \
	$(OBJDIR)/imdraw.o \
	$(OBJDIR)/imedit.o \
	$(OBJDIR)/imfocus.o \
	$(OBJDIR)/imgetset.o \
	$(OBJDIR)/imkey.o \
	$(OBJDIR)/immark.o \
	$(OBJDIR)/immem.o \
	$(OBJDIR)/immouse.o \
	$(OBJDIR)/imnumlc.o \
	$(OBJDIR)/imscroll.o \
	$(OBJDIR)/iupmatrix.o \
	$(OBJDIR)/itcallback.o \
	$(OBJDIR)/itdraw.o \
	$(OBJDIR)/itedit.o \
	$(OBJDIR)/itfind.o \
	$(OBJDIR)/itgetset.o \
	$(OBJDIR)/itimage.o \
	$(OBJDIR)/itkey.o \
	$(OBJDIR)/itlimits.o \
	$(OBJDIR)/itmouse.o \
	$(OBJDIR)/itscroll.o \
	$(OBJDIR)/iuptree.o \
	$(OBJDIR)/icb_hls.o \
	$(OBJDIR)/icb_rgb.o \
	$(OBJDIR)/igc_lng.o \
	$(OBJDIR)/iupcb.o \
	$(OBJDIR)/iupgc.o \

VPATH = mask matrix tree color

.PHONY: clean

$(LIBDIR)/$(TARGET): $(OBJECTS)
	@echo Linking iupcontrols
	-@if [ ! -d $(BINDIR) ]; then mkdir -p $(BINDIR); fi
	-@if [ ! -d $(LIBDIR) ]; then mkdir -p $(LIBDIR); fi
	@ar -cr $@ $^
	@ranlib $@

clean:
	@echo Cleaning iupcontrols
	-@rm -rf $(LIBDIR)/$(TARGET) $(OBJDIR)/*

-include $(OBJECTS:%.o=%.P)

