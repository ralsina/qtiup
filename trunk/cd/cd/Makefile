#############################################################################
# Makefile for building: libcd.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.3.0) on: Tue Jul 3 10:51:37 2007
# Project:  cd.pro
# Template: lib
# Command: /opt/qt4/bin/qmake -unix -o Makefile cd.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -D__CD__ -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=i686 -mtune=generic -O2 -pipe -D_REENTRANT -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -pipe -march=i686 -mtune=generic -O2 -pipe -D_REENTRANT -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/opt/qt4/mkspecs/linux-g++ -I. -I/opt/qt4/include/QtCore -I/opt/qt4/include/QtCore -I/opt/qt4/include/QtGui -I/opt/qt4/include/QtGui -I/opt/qt4/include -I../include -I/usr/include/freetype2 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-rpath,/opt/qt4/lib -shared -Wl,-soname,libcd.so.1
LIBS          = $(SUBLIBS)  -L/opt/qt4/lib -lQtGui -L/opt/qt4/lib -L/usr/X11R6/lib -laudio -lXt -lpng -lSM -lICE -pthread -pthread -lXi -lXrender -lXrandr -lXfixes -lXcursor -lXinerama -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -pthread -lgthread-2.0 -lrt -lglib-2.0 -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /opt/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = cd0emf.c \
		cd0prn.c \
		cd0wmf.c \
		cd.c \
		cdcgm.c \
		cddgn.c \
		cddxf.c \
		cdfontex.c \
		cdirgb.c \
		cdmf.c \
		cdps.c \
		cdqt.cpp \
		cgm.c \
		bparse.c \
		circle.c \
		ellipse.c \
		intcgm1.c \
		intcgm2.c \
		intcgm4.c \
		intcgm6.c \
		list.c \
		rgb2map.c \
		sim.c \
		simclip.c \
		sism.c \
		tparse.c \
		truetype.c \
		vectortext.c \
		wd.c \
		wdhdcpy.c \
		cdqtdbuffer.cpp \
		cdqtimg.cpp 
OBJECTS       = cd0emf.o \
		cd0prn.o \
		cd0wmf.o \
		cd.o \
		cdcgm.o \
		cddgn.o \
		cddxf.o \
		cdfontex.o \
		cdirgb.o \
		cdmf.o \
		cdps.o \
		cdqt.o \
		cgm.o \
		bparse.o \
		circle.o \
		ellipse.o \
		intcgm1.o \
		intcgm2.o \
		intcgm4.o \
		intcgm6.o \
		list.o \
		rgb2map.o \
		sim.o \
		simclip.o \
		sism.o \
		tparse.o \
		truetype.o \
		vectortext.o \
		wd.o \
		wdhdcpy.o \
		cdqtdbuffer.o \
		cdqtimg.o
DIST          = /opt/qt4/mkspecs/common/g++.conf \
		/opt/qt4/mkspecs/common/unix.conf \
		/opt/qt4/mkspecs/common/linux.conf \
		/opt/qt4/mkspecs/qconfig.pri \
		/opt/qt4/mkspecs/features/qt_functions.prf \
		/opt/qt4/mkspecs/features/qt_config.prf \
		/opt/qt4/mkspecs/features/exclusive_builds.prf \
		/opt/qt4/mkspecs/features/default_pre.prf \
		/opt/qt4/mkspecs/features/release.prf \
		/opt/qt4/mkspecs/features/default_post.prf \
		/opt/qt4/mkspecs/features/qt.prf \
		/opt/qt4/mkspecs/features/unix/thread.prf \
		/opt/qt4/mkspecs/features/moc.prf \
		/opt/qt4/mkspecs/features/warn_on.prf \
		/opt/qt4/mkspecs/features/resources.prf \
		/opt/qt4/mkspecs/features/uic.prf \
		/opt/qt4/mkspecs/features/yacc.prf \
		/opt/qt4/mkspecs/features/lex.prf \
		cd.pro
QMAKE_TARGET  = cd
DESTDIR       = ../../lib/
TARGET        = libcd.so.1.0.0
TARGETA       = ../../lib/libcd.a
TARGETD       = libcd.so.1.0.0
TARGET0       = libcd.so
TARGET1       = libcd.so.1
TARGET2       = libcd.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../../lib/$(TARGET)

../../lib/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../../lib/ || $(MKDIR) ../../lib/ 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../../lib/$(TARGET)
	-$(DEL_FILE) ../../lib/$(TARGET0)
	-$(DEL_FILE) ../../lib/$(TARGET1)
	-$(DEL_FILE) ../../lib/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../../lib/



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: cd.pro  /opt/qt4/mkspecs/linux-g++/qmake.conf /opt/qt4/mkspecs/common/g++.conf \
		/opt/qt4/mkspecs/common/unix.conf \
		/opt/qt4/mkspecs/common/linux.conf \
		/opt/qt4/mkspecs/qconfig.pri \
		/opt/qt4/mkspecs/features/qt_functions.prf \
		/opt/qt4/mkspecs/features/qt_config.prf \
		/opt/qt4/mkspecs/features/exclusive_builds.prf \
		/opt/qt4/mkspecs/features/default_pre.prf \
		/opt/qt4/mkspecs/features/release.prf \
		/opt/qt4/mkspecs/features/default_post.prf \
		/opt/qt4/mkspecs/features/qt.prf \
		/opt/qt4/mkspecs/features/unix/thread.prf \
		/opt/qt4/mkspecs/features/moc.prf \
		/opt/qt4/mkspecs/features/warn_on.prf \
		/opt/qt4/mkspecs/features/resources.prf \
		/opt/qt4/mkspecs/features/uic.prf \
		/opt/qt4/mkspecs/features/yacc.prf \
		/opt/qt4/mkspecs/features/lex.prf \
		/opt/qt4/lib/libQtGui.prl \
		/opt/qt4/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile cd.pro
/opt/qt4/mkspecs/common/g++.conf:
/opt/qt4/mkspecs/common/unix.conf:
/opt/qt4/mkspecs/common/linux.conf:
/opt/qt4/mkspecs/qconfig.pri:
/opt/qt4/mkspecs/features/qt_functions.prf:
/opt/qt4/mkspecs/features/qt_config.prf:
/opt/qt4/mkspecs/features/exclusive_builds.prf:
/opt/qt4/mkspecs/features/default_pre.prf:
/opt/qt4/mkspecs/features/release.prf:
/opt/qt4/mkspecs/features/default_post.prf:
/opt/qt4/mkspecs/features/qt.prf:
/opt/qt4/mkspecs/features/unix/thread.prf:
/opt/qt4/mkspecs/features/moc.prf:
/opt/qt4/mkspecs/features/warn_on.prf:
/opt/qt4/mkspecs/features/resources.prf:
/opt/qt4/mkspecs/features/uic.prf:
/opt/qt4/mkspecs/features/yacc.prf:
/opt/qt4/mkspecs/features/lex.prf:
/opt/qt4/lib/libQtGui.prl:
/opt/qt4/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile cd.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/cd1.0.0 || $(MKDIR) .tmp/cd1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/cd1.0.0/ && $(COPY_FILE) --parents bparse.h cdfontex.h cdmfpriv.h cdqt.h cgm.h circle.h ellipse.h intcgm2.h intcgm4.h intcgm6.h intcgm.h list.h sim.h sism.h tparse.h truetype.h types.h .tmp/cd1.0.0/ && $(COPY_FILE) --parents cd0emf.c cd0prn.c cd0wmf.c cd.c cdcgm.c cddgn.c cddxf.c cdfontex.c cdirgb.c cdmf.c cdps.c cdqt.cpp cgm.c bparse.c circle.c ellipse.c intcgm1.c intcgm2.c intcgm4.c intcgm6.c list.c rgb2map.c sim.c simclip.c sism.c tparse.c truetype.c vectortext.c wd.c wdhdcpy.c cdqtdbuffer.cpp cdqtimg.cpp .tmp/cd1.0.0/ && (cd `dirname .tmp/cd1.0.0` && $(TAR) cd1.0.0.tar cd1.0.0 && $(COMPRESS) cd1.0.0.tar) && $(MOVE) `dirname .tmp/cd1.0.0`/cd1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/cd1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../../lib/$(TARGET) 
	-$(DEL_FILE) ../../lib/$(TARGET0) ../../lib/$(TARGET1) ../../lib/$(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

cd0emf.o: cd0emf.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o cd0emf.o cd0emf.c

cd0prn.o: cd0prn.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o cd0prn.o cd0prn.c

cd0wmf.o: cd0wmf.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o cd0wmf.o cd0wmf.c

cd.o: cd.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o cd.o cd.c

cdcgm.o: cdcgm.c cgm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o cdcgm.o cdcgm.c

cddgn.o: cddgn.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o cddgn.o cddgn.c

cddxf.o: cddxf.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o cddxf.o cddxf.c

cdfontex.o: cdfontex.c cdfontex.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o cdfontex.o cdfontex.c

cdirgb.o: cdirgb.c sim.h \
		truetype.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o cdirgb.o cdirgb.c

cdmf.o: cdmf.c cdmfpriv.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o cdmf.o cdmf.c

cdps.o: cdps.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o cdps.o cdps.c

cdqt.o: cdqt.cpp cdqt.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cdqt.o cdqt.cpp

cgm.o: cgm.c cgm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o cgm.o cgm.c

bparse.o: bparse.c list.h \
		types.h \
		bparse.h \
		intcgm.h \
		intcgm2.h \
		intcgm4.h \
		intcgm6.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o bparse.o bparse.c

circle.o: circle.c list.h \
		types.h \
		intcgm.h \
		intcgm6.h \
		circle.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o circle.o circle.c

ellipse.o: ellipse.c list.h \
		types.h \
		intcgm.h \
		intcgm6.h \
		ellipse.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ellipse.o ellipse.c

intcgm1.o: intcgm1.c list.h \
		types.h \
		intcgm2.h \
		intcgm.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o intcgm1.o intcgm1.c

intcgm2.o: intcgm2.c list.h \
		types.h \
		bparse.h \
		tparse.h \
		intcgm.h \
		intcgm6.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o intcgm2.o intcgm2.c

intcgm4.o: intcgm4.c list.h \
		types.h \
		intcgm.h \
		intcgm2.h \
		intcgm4.h \
		intcgm6.h \
		ellipse.h \
		circle.h \
		sism.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o intcgm4.o intcgm4.c

intcgm6.o: intcgm6.c list.h \
		types.h \
		intcgm.h \
		intcgm2.h \
		intcgm6.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o intcgm6.o intcgm6.c

list.o: list.c list.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o list.o list.c

rgb2map.o: rgb2map.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o rgb2map.o rgb2map.c

sim.o: sim.c sim.h \
		truetype.h \
		cdfontex.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o sim.o sim.c

simclip.o: simclip.c sim.h \
		truetype.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o simclip.o simclip.c

sism.o: sism.c list.h \
		types.h \
		intcgm.h \
		intcgm2.h \
		intcgm6.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o sism.o sism.c

tparse.o: tparse.c list.h \
		types.h \
		bparse.h \
		intcgm.h \
		intcgm2.h \
		intcgm4.h \
		intcgm6.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o tparse.o tparse.c

truetype.o: truetype.c truetype.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o truetype.o truetype.c

vectortext.o: vectortext.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o vectortext.o vectortext.c

wd.o: wd.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o wd.o wd.c

wdhdcpy.o: wdhdcpy.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o wdhdcpy.o wdhdcpy.c

cdqtdbuffer.o: cdqtdbuffer.cpp cdqt.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cdqtdbuffer.o cdqtdbuffer.cpp

cdqtimg.o: cdqtimg.cpp cdqt.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cdqtimg.o cdqtimg.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

